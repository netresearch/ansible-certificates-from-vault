---
- name: Rollout TLS certificates
  become: true
  when:
    - certificates | length > 0
  block:

    - name: Provide TLS certificates from Vault
      copy:
        content: >-
          {{ lookup('hashi_vault',
          'secret={{ vault_path.rstrip("/") }}/{{ item }}
          {{ vault_token_string }}
          url={{ vault_url }}')[vault_secret_cert_keyname] }}
        dest: "{{ cert_dest_dir }}/{{ item }}-cert.pem"
        owner: "root"
        group: "root"
        mode: 0644
      loop: "{{ certificates }}"

    - name: Check if certificates are currently still valid, ignoring failures
      community.crypto.x509_certificate_info:
        path: "{{ cert_dest_dir }}/{{ item }}-cert.pem"
        valid_at:
          point_1: "+12w"
      ignore_errors: true
      register: validity_check
      loop: "{{ certificates }}"

    - name: Validate that certificate is valid in 12 weeks
      assert:
        that:
          - item.valid_at.point_1
        quiet: true
      loop: "{{ validity_check.results }}"

    - name: Provide TLS private keys from Vault
      copy:
        content: >-
          {{ lookup(
          'hashi_vault',
          'secret={{ vault_path.rstrip("/") }}/{{ item }}
          {{ vault_token_string }}
          url={{ vault_url }}')[vault_secret_key_keyname] }}
        dest: "{{ cert_dest_dir }}/{{ item }}-private-key.pem"
        owner: "root"
        group: "root"
        mode: 0600
      loop: "{{ certificates }}"

    - name: Ensure that existing certificate belongs to specified private key
      openssl_certificate:
        path: "{{ cert_dest_dir }}/{{ item }}-cert.pem"
        privatekey_path: "{{ cert_dest_dir }}/{{ item }}-private-key.pem"
        provider: assertonly
        privatekey_passphrase:
      loop: "{{ certificates }}"
      ignore_errors: "{{ ansible_check_mode }}"
